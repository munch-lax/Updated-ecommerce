{"version":3,"sources":["components/Footer.js","components/Header.js","actions/userActions.js","actions/index.js","components/loader.js","components/Message.js","components/ProductCarousel.js","screens/Rating.js","screens/Product.js","screens/HomeScreen.js","components/Rating.js","screens/ProductScreen.js","actions/cartactions.js","screens/CartScreen.js","screens/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","components/CheckoutScreen.js","screens/ShippingScreen.js","screens/PaymentScreen.js","orderConstants.js","screens/PlaceOrderScreen.js","actions/orderActions.js","screens/OrderScreen.js","App.js","reportWebVitals.js","store.js","reducers/productListReducer.js","reducers/productDetails.js","reducers/cartReducers.js","reducers/userReducer.js","reducers/orderReducers.js","index.js"],"names":["Footer","Container","Row","Col","className","Header","userInfo","useSelector","state","userLogin","dispatch","useDispatch","Navbar","bg","variant","expand","collapseOnSelect","to","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","title","name","Item","onClick","localStorage","removeItem","console","log","type","listProducts","a","axios","get","data","payload","Loader","Spinner","animation","role","style","height","width","margin","display","Message","children","Alert","ProductCarousel","productTopRated","error","loading","products","useEffect","response","detail","message","Carousel","pause","map","product","_id","Image","src","image","alt","fluid","Caption","price","Rating","value","text","color","Product","Card","this","props","Img","Body","Title","as","Text","rating","numReviews","colour","Component","HomeScreen","productlist","productList","sm","md","lg","xl","ProductScreen","match","history","useState","qty","setQty","setRating","comment","setComment","productDetails","productReviewCreate","loadingProductReview","errorProductReview","successProductReview","success","params","ListGroup","description","countInStock","xs","Form","Control","onChange","e","target","Array","keys","x","Button","push","disabled","reviews","length","review","onSubmit","productId","preventDefault","getState","config","headers","Authorization","token","post","Group","controlId","Label","row","addtocart","setItem","JSON","stringify","cart","cartItems","CartScreen","Location","History","productid","search","Number","split","removefromcart","removeFromCart","item","rounded","padding","paddingLeft","reduce","acc","FormContainer","LoginScreen","location","email","setEmail","password","setpassword","redirect","login","placeholder","RegisterScreen","setName","confirmpassword","setConfirmPassword","setmessage","userRegister","xyz","register","setTimeout","required","ProfileScreen","setPassword","confirmPassword","setMessage","userDetails","user","userUpdateProfile","put","updateUserProfile","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","shippingAddress","address","setaddress","city","setcity","code","setcode","country","setcountry","PaymentScreen","paymentMethod","setPaymentMethod","Check","label","checked","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","PlaceOrderScreen","orderCreate","order","itemsPrice","toFixed","shippingPrice","taxPrice","totalPrice","postalCode","index","createOrder","orderItems","OrderScreen","orderId","sdkReady","setSdkReady","orderDetails","orderPay","loadingPay","successPay","isPaid","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","Id","href","isDelivered","deliveredAt","paidAt","amount","onSuccess","paymentResult","payOrder","isAdmin","deliverOrder","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","pages","existItem","find","filter","cartitemsfromstorage","getItem","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7e0fac5b.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>\r\n                    Copyeight &copy; Webshop\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Button, Container, Form, FormControl, Nav, Navbar, NavDropdown } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { logout } from '../actions/userActions'\r\nexport const Header = () => {\r\n\r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const{userInfo}=userLogin\r\n\r\n   const dispatch = useDispatch()\r\n    const logoutHandler=()=>{\r\n        \r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant='dark' expand=\"lg\" collapseOnSelect>\r\n            <Container>\r\n            <LinkContainer to=\"/\" >\r\n            <Navbar.Brand >Webshop</Navbar.Brand></LinkContainer>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n               <LinkContainer to=\"/cart\" ><Nav.Link ><i className='fas fa-shopping-cart'></i>Cart</Nav.Link></LinkContainer>\r\n               {userInfo?(\r\n                   <NavDropdown title={userInfo.name} id='username'>\r\n                        <LinkContainer to='/profile'>\r\n                            <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                            \r\n                        </LinkContainer>\r\n                        <NavDropdown.Item onClick={logoutHandler}>LogOut</NavDropdown.Item>\r\n\r\n                   </NavDropdown>\r\n               ):(<LinkContainer to=\"/login\" ><Nav.Link ><i className='fas fa-user'></i>Login</Nav.Link></LinkContainer>)}\r\n               \r\n                \r\n                </Nav>\r\n                \r\n                \r\n            </Navbar.Collapse>\r\n            </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n","import axios from 'axios'\r\n\r\nexport const login = (email,password)=>async dispatch=>{\r\n    try{\r\n        dispatch({\r\n            type:\"USER_LOGIN_REQUEST\",\r\n            \r\n        })\r\n\r\n        const config={\r\n            headers:{'Content-type':'application/json'}\r\n        }\r\n        const{data}=await axios.post('/api/users/login/',{'username':email,'password':password},config)\r\n        \r\n        dispatch({\r\n            type:\"USER_LOGIN_SUCCESS\",\r\n            payload:data\r\n            \r\n        })\r\n\r\n        localStorage.setItem('userInfo',JSON.stringify(data))\r\n\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type:\"USER_LOGIN_FAIL\",\r\n            payload:\"something went wrong\"\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logout=()=>dispatch=>{\r\n    localStorage.removeItem('userInfo')\r\n    console.log(\"this is logout action\")\r\n    dispatch({\r\n        type:\"USER_LOGOUT\"\r\n        \r\n    })\r\n}\r\n\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: 'USER_REGISTER_REQUEST'\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            'http://127.0.0.1:8000/api/users/register/',\r\n            { 'name': name, 'email': email, 'password': password },\r\n            config\r\n        )\r\n            console.log(\"benchod isko padhane nahi aata\",data)\r\n        dispatch({\r\n            type: 'USER_REGISTER_SUCCESS',\r\n            payload:\"Successfully Registered\"\r\n        })\r\n\r\n        \r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        console.log(\"bc seedha catch mee\")\r\n        dispatch({\r\n            type: 'USER_REGISTER_FAIL',\r\n            payload: 'SUCCESSFULLY REGISTERED'\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: 'USER_DETAILS_REQUEST'\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: 'USER_DETAILS_SUCCESS',\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: 'USER_DETAILS_FAIL',\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: 'USER_UPDATE_PROFILE_REQUEST'\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: 'USER_UPDATE_PROFILE_SUCCESS',\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: 'USER_LOGIN_SUCCESS',\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: 'USER_UPDATE_PROFILE_FAIL',\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n","import axios from \"axios\"\r\n\r\nexport const listProducts=()=>async(dispatch)=>{\r\n   \r\n    try{\r\n        dispatch({type:\"PRODUCT_LIST_REQUEST\"})\r\n        const {data}=await axios.get('/api/products/')\r\n        dispatch({type:\"PRODUCT_LIST_SUCCESS\",payload:data})\r\n    }\r\n    catch (error){\r\n        dispatch({\r\n            type:\"PRODUCT_LIST_FAIL\",\r\n            payload:\"something went wrong\"\r\n        })\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport const listProductDetails=(id)=>async(dispatch)=>{\r\n   \r\n    try{\r\n        dispatch({type:\"PRODUCT_DETAILS_REQUEST\"})\r\n        const {data}=await axios.get(`/api/products/${id}`)\r\n        dispatch({type:\"PRODUCT_DETAILS_SUCCESS\",payload:data})\r\n    }\r\n    catch (error){\r\n        dispatch({\r\n            type:\"PRODUCT_DETAILS_FAIL\",\r\n            payload:\"something went wrong\"\r\n        })\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: 'PRODUCT_CREATE_REVIEW_REQUEST'\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: 'PRODUCT_CREATE_REVIEW_SUCCESS',\r\n            payload: data,\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: 'PRODUCT_CREATE_REVIEW_FAIL',\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: 'PRODUCT_TOP_REQUEST' })\r\n\r\n        const { data } = await axios.get(`/api/products/top/`)\r\n\r\n        dispatch({\r\n            type: 'PRODUCT_TOP_SUCCESS',\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: 'PRODUCT_TOP_FAIL',\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner\r\n        animation='border'\r\n        role='status'\r\n        style={{height:'100px',width:100,margin:'auto',display:'block'}}\r\n        >\r\n\r\n        <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nfunction Message({ variant, children }) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Carousel, Image } from 'react-bootstrap'\nimport Loader from './loader'\nimport Message from './Message'\nimport { listTopProducts } from '../actions'\n\nfunction ProductCarousel() {\n    const dispatch = useDispatch()\n\n    const productTopRated = useSelector(state => state.productTopRated)\n    const { error, loading, products } = productTopRated\n\n    useEffect(() => {\n        dispatch(listTopProducts())\n    }, [dispatch])\n\n    return (loading ? <Loader />\n        : error\n            ? <Message variant='danger'>{error}</Message>\n            : (\n                <Carousel pause='hover' className='bg-dark'>\n                    {products.map(product => (\n                        <Carousel.Item key={product._id}>\n                            <Link to={`/product/${product._id}`}>\n                                <Image src={product.image} alt={product.name} fluid />\n                                <Carousel.Caption className='carousel.caption'>\n                                    <h6>{product.name} (${product.price})</h6>\n                                </Carousel.Caption>\n                            </Link>\n                        </Carousel.Item>\n                    ))}\n                </Carousel>\n            )\n\n    )\n}\n\nexport default ProductCarousel\n","import React from 'react'\r\n\r\nconst Rating = ({value,text,color}) => {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i className={\r\n                    value>=1\r\n                    ?'fas fa-star'\r\n                    :value>=0.5\r\n                        ?'fas fa-star-half-alt'\r\n                        :'far fa-star'\r\n                    \r\n\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i className={\r\n                    value>=2\r\n                    ?'fas fa-star'\r\n                    :value>=1.5\r\n                        ?'fas fa-star-half-alt'\r\n                        :'far fa-star'\r\n                    \r\n\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i className={\r\n                    value>=3\r\n                    ?'fas fa-star'\r\n                    :value>=2.5\r\n                        ?'fas fa-star-half-alt'\r\n                        :'far fa-star'\r\n                    \r\n\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i className={\r\n                    value>=4\r\n                    ?'fas fa-star'\r\n                    :value>=3.5\r\n                        ?'fas fa-star-half-alt'\r\n                        :'far fa-star'\r\n                    \r\n\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i className={\r\n                    value>=5\r\n                    ?'fas fa-star'\r\n                    :value>=4.5\r\n                        ?'fas fa-star-half-alt'\r\n                        :'far fa-star'\r\n                    \r\n\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            <span>{text && text}</span>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React, { Component } from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom';\r\nimport Rating from \"./Rating\";\r\n\r\nexport default class Product extends Component {\r\n    render() {\r\n        return (\r\n            <Card className='my-3 p-3 rounded'>\r\n                <Link to={`/product/${this.props.product._id}`}>\r\n                <Card.Img src={this.props.product.image}/>\r\n                <Card.Body >\r\n                    <Card.Title as='div'>\r\n                    <strong>{this.props.product.name}</strong>\r\n                    </Card.Title>\r\n                </Card.Body>\r\n                \r\n                <Card.Text as='div'>\r\n                    <div className=\"my-3\">\r\n                        \r\n\r\n                        <Rating value={this.props.product.rating} text={`${this.props.product.numReviews} reviews`} colour={'#f8e25'}/>\r\n\r\n                    </div>\r\n                   \r\n                </Card.Text>\r\n            \r\n            <Card.Text as='h4'>\r\n                ${this.props.product.price}\r\n            </Card.Text>\r\n            </Link>\r\n            </Card>\r\n            \r\n        )\r\n    }\r\n}\r\n","import React, { Component ,useState,useEffect } from 'react'\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listProducts } from '../actions';\r\nimport Loader from '../components/loader';\r\nimport ProductCarousel from '../components/ProductCarousel';\r\n\r\n\r\nimport Product from './Product';\r\n\r\nfunction HomeScreen() {\r\n    const  dispatch = useDispatch(listProducts)\r\n    const productlist=useSelector(state=>state.productList)\r\n    const {error,loading,products}=productlist\r\n    useEffect(()=>{\r\n        dispatch(listProducts())\r\n    \r\n    },[])\r\n\r\n    \r\n    \r\n        return (\r\n            <div>\r\n                <ProductCarousel/>\r\n               <h1> Latest Products</h1>\r\n               {loading?<Loader/>:error?<h3>error</h3>:\r\n               \r\n            \r\n               <Row>\r\n                   {products.map(product=>(\r\n                       \r\n                       <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                       <Product product={product}/>\r\n                       \r\n                       </Col>\r\n                   ))}\r\n               </Row>\r\n                }\r\n            </div>\r\n\r\n                   \r\n        )\r\n    }\r\n\r\n\r\nexport default HomeScreen\r\n\r\n","import React from 'react'\n\nfunction Rating({ value, text, color }) {\n    return (\n        <div className=\"rating\">\n            <span>\n                <i style={{ color }} className={\n                    value >= 1\n                        ? 'fas fa-star'\n                        : value >= 0.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>\n                <i style={{ color }} className={\n                    value >= 2\n                        ? 'fas fa-star'\n                        : value >= 1.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>\n                <i style={{ color }} className={\n                    value >= 3\n                        ? 'fas fa-star'\n                        : value >= 2.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>\n                <i style={{ color }} className={\n                    value >= 4\n                        ? 'fas fa-star'\n                        : value >= 3.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>\n                <i style={{ color }} className={\n                    value >= 5\n                        ? 'fas fa-star'\n                        : value >= 4.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>{text && text}</span>\n        </div>\n    )\n}\n\nexport default Rating\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/loader'\r\nimport Message from '../components/Message'\r\nimport { listProductDetails, createProductReview } from '../actions/'\r\n\r\nfunction ProductScreen({ match, history }) {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {\r\n        loading: loadingProductReview,\r\n        error: errorProductReview,\r\n        success: successProductReview,\r\n    } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: 'PRODUCT_CREATE_REVIEW_RESET' })\r\n        }\r\n\r\n        dispatch(listProductDetails(match.params.id))\r\n\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id, {\r\n            rating,\r\n            comment\r\n        }\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\r\n            {loading ?\r\n                <Loader />\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <div>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <Image src={product.image} alt={product.name} fluid />\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item>\r\n                                            <h3>{product.name}</h3>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Price: ${product.price}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Description: {product.description}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <Card>\r\n                                        <ListGroup variant='flush'>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Price:</Col>\r\n                                                    <Col>\r\n                                                        <strong>${product.price}</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Status:</Col>\r\n                                                    <Col>\r\n                                                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Qty</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control\r\n                                                                as=\"select\"\r\n                                                                value={qty}\r\n                                                                onChange={(e) => setQty(e.target.value)}\r\n                                                            >\r\n                                                                {\r\n\r\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                        <option key={x + 1} value={x + 1}>\r\n                                                                            {x + 1}\r\n                                                                        </option>\r\n                                                                    ))\r\n                                                                }\r\n\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Button\r\n                                                    onClick={addToCartHandler}\r\n                                                    className='btn-block'\r\n                                                    disabled={product.countInStock == 0}\r\n                                                    type='button'>\r\n                                                    Add to Cart\r\n                                                </Button>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <h4>Reviews</h4>\r\n                                    {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\r\n\r\n                                    <ListGroup variant='flush'>\r\n                                        {product.reviews.map((review) => (\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color='#f8e825' />\r\n                                                \r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Write a review</h4>\r\n\r\n                                            {loadingProductReview && <Loader />}\r\n                                            {successProductReview && <Message variant='success'>Review Submitted</Message>}\r\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n\r\n                                            {userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label>Rating</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='select'\r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}\r\n                                                        >\r\n                                                            <option value=''>Select...</option>\r\n                                                            <option value='1'>1 - Poor</option>\r\n                                                            <option value='2'>2 - Fair</option>\r\n                                                            <option value='3'>3 - Good</option>\r\n                                                            <option value='4'>4 - Very Good</option>\r\n                                                            <option value='5'>5 - Excellent</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Review</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='textarea'\r\n                                                            row='5'\r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}\r\n                                                        ></Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Button\r\n                                                        disabled={loadingProductReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'\r\n                                                    >\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ) : (\r\n                                                    <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    )\r\n\r\n            }\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\n\r\n\r\n\r\nexport const addtocart=(id,qty)=> async(dispatch,getState)=>{\r\n    const {data}=await axios.get(`/api/products/${id}`)\r\n    console.log(data)\r\n    dispatch({\r\n        type:'CART_ADD_ITEM',\r\n        payload:{\r\n            product:data._id,\r\n            name:data.name,\r\n            image:data.image,\r\n            price:data.price,\r\n            countInStock:data.countInStock,\r\n            qty\r\n        }\r\n\r\n\r\n})\r\n\r\nlocalStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems))\r\n\r\n}\r\n\r\n\r\nexport const removeFromCart =(id)=>async(dispatch,getState)=>{\r\n    dispatch({\r\n        type:'CART_REMOVE_ITEM',\r\n        payload:id,\r\n    })\r\n    localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: 'CART_SAVE_SHIPPING_ADDRESS',\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: 'CART_SAVE_PAYMENT_METHOD',\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { Col, Image, ListGroup, Row,Form, Button, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { addtocart,removeFromCart } from '../actions/cartactions'\r\nimport Message from '../components/Message'\r\n\r\nconst CartScreen = (match,Location,History) => {\r\n\r\n\r\n    \r\n\r\n   \r\n    const productid=match.match.params.id\r\n    const qty=Location.search?Number(Location.search.split('=')[1]):1\r\n\r\n    const dispatch=useDispatch()\r\n\r\n    const cart = useSelector(state=>state.cart)\r\n    const {cartItems} =cart\r\n    console.log(cart)\r\n    useEffect(()=>{\r\n        if(productid){\r\n            dispatch(addtocart(productid,qty))\r\n        }\r\n\r\n\r\n    },[dispatch,productid,qty])\r\n\r\n    const removefromcart=(id)=>{\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h3>Shopping Cart</h3>\r\n                { cartItems.length===0?(\r\n                    <Message variant='info'>Your cart is empty</Message>\r\n                ) :(\r\n                    <ListGroup >\r\n                            {cartItems.map(item=>(\r\n                                    <ListGroup.Item key={item.productid}>\r\n                                        <Row>\r\n                                            <Col md={2}  className='mg-3'>\r\n                                                <Image src={item.image} fluid rounded/>\r\n                                            </Col>\r\n                                            <Col md={3}  className='mg-3'>\r\n                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                            \r\n                                            </Col>\r\n                                            <Col md={3}  className='mg-3'>\r\n                                              <div> <h6>{item.price}</h6></div>\r\n                                            \r\n                                            </Col>\r\n                                            <Col md={2}   className='mg-3'>\r\n                                            <Form.Control as='select' value={item.qty} onChange={(e)=>dispatch(addtocart(item.product,Number(e.target.value)))}>\r\n                                                <option key={1} value={1}>1</option>\r\n                                                <option key={2} value={2}>2</option>\r\n                                                <option key={3} value={3}>3</option>\r\n                                                <option key={4} value={4}>4</option>\r\n                                            </Form.Control>\r\n                                            </Col>\r\n                                            <Col md={0.5} >\r\n                                                <Button\r\n                                                 type='button'\r\n                                                 variant='light'\r\n                                                 onClick={()=>removefromcart(item.product)}\r\n                                                >\r\n                                                    <i className='fas fa-trash'></i>\r\n\r\n\r\n                                                </Button>\r\n\r\n                                            \r\n                                            \r\n                                            </Col>\r\n                                        </Row>\r\n\r\n                                    </ListGroup.Item>\r\n                            \r\n                            \r\n                            ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n            <Col md={4} style={{padding:35,paddingLeft:50}}>\r\n                <Card>\r\n                    <ListGroup>\r\n                        <ListGroup.Item>\r\n                            <h5>Total Items : {cartItems.reduce((acc,item)=> acc+Number(item.qty),0)}</h5>\r\n                            \r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h5>Total Price: {cartItems.reduce((acc,item)=> acc+Number(item.qty)*item.price,0)}</h5>\r\n                            \r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Link to='/shipping'>\r\n                            <Button \r\n                            type='button'\r\n                            className='btn-block'\r\n                            disabled={cartItems.length===0}\r\n                            \r\n                            >\r\n\r\n\r\n                            <h5>Checkout</h5>\r\n                            </Button>\r\n                            </Link>\r\n                            \r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({children}) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Col, Form, Row } from 'react-bootstrap'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport FormContainer from './FormContainer'\r\nimport {useDispatch} from 'react-redux'\r\nimport { login } from '../actions/userActions'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/loader'\r\n\r\nconst LoginScreen = ({history,location}) => {\r\n    const [email,setEmail]=useState('')\r\n    const [password,setpassword]=useState('')\r\n\r\n    const dispatch = useDispatch()\r\n    const redirect=location.search ? location.search.split('=')[1]:'/'\r\n    const userLogin=useSelector(state=>state.userLogin)\r\n    const {error,loading,userInfo}=userLogin\r\n\r\n    useEffect(()=>{\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    },[history,userInfo,redirect])\r\n\r\n\r\n\r\n\r\n    const submitHandler=(e)=>{\r\n        e.preventDefault()\r\n        dispatch(login(email,password))\r\n        \r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message >{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                    type='email'\r\n                    placeholder=\"Enter Email\"   \r\n                    value={email}  \r\n                    onChange={(e)=>setEmail(e.target.value)}               \r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                    type='password'\r\n                    placeholder=\"Enter Password\"   \r\n                    value={password}  \r\n                    onChange={(e)=>setpassword(e.target.value)}               \r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>Sign In</Button>\r\n            </Form>\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    NewCustomer? <Link to={redirect?`/register?redirect=${redirect}`:'/register'}>Register</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Button, Col, Form, Row } from 'react-bootstrap'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport FormContainer from './FormContainer'\r\nimport {useDispatch} from 'react-redux'\r\nimport { login, register } from '../actions/userActions'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/loader'\r\n\r\nfunction RegisterScreen({location,history}) {\r\n    const [name,setName]=useState('')\r\n    const [email,setEmail]=useState('')\r\n    const [password,setpassword]=useState('')\r\n    const [confirmpassword,setConfirmPassword]=useState('')\r\n    const [message,setmessage]=useState('')\r\n\r\n    const dispatch = useDispatch()\r\n    const redirect=location.search ? location.search.split('=')[1]:'/'\r\n    const userRegister=useSelector(state=>state.userRegister)\r\n    const {error,loading,userInfo}=userRegister\r\n\r\n    useEffect(()=>{\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    },[history,userInfo,redirect])\r\n\r\n\r\n    function xyz() {\r\n        \r\n        history.push('/login')\r\n    }\r\n\r\n    const submitHandler=(e)=>{\r\n        e.preventDefault()\r\n        if (password!=confirmpassword){\r\n            setmessage('Passwords do not match')\r\n        }\r\n        else{\r\n\r\n        }\r\n        dispatch(register(name,email,password))\r\n\r\n    setTimeout(xyz,3000)\r\n        \r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Register</h1>\r\n            {message && <Message >{message}</Message>}\r\n            {error && <Message >{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n            <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                    required\r\n                    type='Name'\r\n                    placeholder=\"Enter Name\"   \r\n                    value={name}  \r\n                    onChange={(e)=>setName(e.target.value)}               \r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                    required\r\n                    type='email'\r\n                    placeholder=\"Enter Email\"   \r\n                    value={email}  \r\n                    onChange={(e)=>setEmail(e.target.value)}               \r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                    required\r\n                    type='password'\r\n                    placeholder=\"Enter Password\"   \r\n                    value={password}  \r\n                    onChange={(e)=>setpassword(e.target.value)}               \r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmpassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                    required\r\n                    type='password'\r\n                    placeholder=\"Confirm Password\"   \r\n                    value={confirmpassword}  \r\n                    onChange={(e)=>setConfirmPassword(e.target.value)}               \r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>Submit</Button>\r\n\r\n\r\n\r\n            </Form>\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account? <Link to={redirect?`/login?redirect=${redirect}`:'/login'}>Sign In</Link>\r\n                </Col>\r\n            </Row>\r\n            \r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\n\r\n\r\n\r\nfunction ProfileScreen({ history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    \r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success || userInfo._id !== user._id) {\r\n                dispatch({ type: 'USER_UPDATE_PROFILE_RESET' })\r\n                dispatch(getUserDetails('profile'))\r\n                \r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n            setMessage('')\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                </Button>\r\n\r\n                </Form>\r\n            </Col>\r\n\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                \r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\r\n\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Login</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Login</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Shipping</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Payment</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Place Order</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { saveShippingAddress } from '../actions/cartactions'\r\nimport CheckoutSteps from '../components/CheckoutScreen'\r\nimport FormContainer from './FormContainer'\r\n\r\nconst ShippingScreen = ({history}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const cart =useSelector(state=>state.cart)\r\n    const {shippingAddress}=cart\r\n\r\n    const[address,setaddress]=useState(shippingAddress.address)\r\n    const[city,setcity]=useState(shippingAddress.city)\r\n    const[code,setcode]=useState(shippingAddress.code)\r\n    const[country,setcountry]=useState(shippingAddress.country)\r\n    const submitHandler=(e)=>{\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({address,city,code,country}))\r\n        history.push('/payment')\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                    required\r\n                    type='Text'\r\n                    placeholder=\"Enter Address\"   \r\n                    value={address?address:\"\"}  \r\n                    onChange={(e)=>setaddress(e.target.value)}               \r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                    required\r\n                    type='Text'\r\n                    placeholder=\"Enter City\"   \r\n                    value={city?city:\"\"}  \r\n                    onChange={(e)=>setcity(e.target.value)}               \r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='code'>\r\n                    <Form.Label>Postal code</Form.Label>\r\n                    <Form.Control\r\n                    required\r\n                    type='Text'\r\n                    placeholder=\"Enter Postal code\"   \r\n                    value={code?code:\"\"}  \r\n                    onChange={(e)=>setcode(e.target.value)}               \r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>country</Form.Label>\r\n                    <Form.Control\r\n                    required\r\n                    type='Text'\r\n                    placeholder=\"Enter country\"   \r\n                    value={country?country:\"\"}  \r\n                    onChange={(e)=>setcountry(e.target.value)}               \r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState, useEffect } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from './FormContainer'\nimport CheckoutSteps from '../components/CheckoutScreen'\nimport { savePaymentMethod } from '../actions/cartactions'\n\nfunction PaymentScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n    if (!shippingAddress.address) {\n        history.push('/shipping')\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>Select Method</Form.Label>\n                    <Col>\n                        <Form.Check\n                            type='radio'\n                            label='PayPal or Credit Card'\n                            id='paypal'\n                            name='paymentMethod'\n                            checked\n                            onChange={(e) => setPaymentMethod(e.target.value)}\n                        >\n\n                        </Form.Check>\n                    </Col>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default PaymentScreen\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\n\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\n\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\n\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\n","import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutScreen'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../../src/orderConstants'\n\nfunction PlaceOrderScreen({ history }) {\n\n    const orderCreate = useSelector(state => state.orderCreate)\n    const { order, error, success } = orderCreate\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\n\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\n\n\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    if (!cart.paymentMethod) {\n        history.push('/payment')\n    }\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        }\n        if (success) {\n            history.push(`/order/${order._id}`)\n            dispatch({ type: ORDER_CREATE_RESET })\n        }\n    }, [success, history])\n\n    const placeOrder = () => {\n        \n        dispatch(createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice,\n        }))\n    }\n\n    return (\n        <div>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n\n                            <p>\n                                <strong>Shipping: </strong>\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\n                                {'  '}\n                                {cart.shippingAddress.postalCode},\n                                {'  '}\n                                {cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                                <strong>Method: </strong>\n                                {cart.paymentMethod}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\n                                Your cart is empty\n                            </Message> : (\n                                    <ListGroup variant='flush'>\n                                        {cart.cartItems.map((item, index) => (\n                                            <ListGroup.Item key={index}>\n                                                <Row>\n                                                    <Col md={1}>\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\n                                                    </Col>\n\n                                                    <Col>\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                    </Col>\n\n                                                    <Col md={4}>\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                        ))}\n                                    </ListGroup>\n                                )}\n                        </ListGroup.Item>\n\n                    </ListGroup>\n\n                </Col>\n\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items:</Col>\n                                    <Col>${cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping:</Col>\n                                    <Col>${cart.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax:</Col>\n                                    <Col>${cart.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total:</Col>\n                                    <Col>${cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n\n                            \n                            <ListGroup.Item>\n                                <Button\n                                    type='button'\n                                    className='btn-block'\n                                    disabled={cart.cartItems === 0}\n                                    onClick={placeOrder}\n                                >\n                                    Place Order\n                                </Button>\n                            </ListGroup.Item>\n\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default PlaceOrderScreen\n","import axios from 'axios'\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n} from '../../src/orderConstants'\n\n\n\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/orders/add/`,\n            order,\n            config\n        )\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: 'CART_CLEAR_ITEMS',\n            payload: data\n        })\n\n        localStorage.removeItem('cartItems')\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${id}/pay/`,\n            paymentResult,\n            config\n        )\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${order._id}/deliver/`,\n            {},\n            config\n        )\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/myorders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../../src/orderConstants'\r\n\r\nfunction OrderScreen({ match, history }) {\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    //const orderDeliver = useSelector(state => state.orderDeliver)\r\n    //const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    if (!loading && !error) {\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n\r\n\r\n    const addPayPalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AR17kLdR85aalEpc7uTIGq1jKXewI06Wx19u8AB582njXuZ3XorCKqF8WUel3D0D70UKfSjNVadamScH'\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (!order || successPay || order._id !== Number(orderId)) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, order, orderId, successPay])\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n                <div>\r\n                    <h1>Order: {order.Id}</h1>\r\n                    <Row>\r\n                        <Col md={8}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>Shipping</h2>\r\n                                    <p><strong>Name: </strong> {order.user.name}</p>\r\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                                    <p>\r\n                                        <strong>Shipping: </strong>\r\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\r\n                                        {'  '}\r\n                                        {order.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                        {order.shippingAddress.country}\r\n                                    </p>\r\n\r\n                                    {order.isDelivered ? (\r\n                                        <Message variant='success'>Delivered on {order.deliveredAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Not Delivered</Message>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Payment Method</h2>\r\n                                    <p>\r\n                                        <strong>Method: </strong>\r\n                                        {order.paymentMethod}\r\n                                    </p>\r\n                                    {order.isPaid ? (\r\n                                        <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Not Paid</Message>\r\n                                        )}\r\n\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Order Items</h2>\r\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\r\n                                        Order is empty\r\n                            </Message> : (\r\n                                            <ListGroup variant='flush'>\r\n                                                {order.orderItems.map((item, index) => (\r\n                                                    <ListGroup.Item key={index}>\r\n                                                        <Row>\r\n                                                            <Col md={1}>\r\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                            </Col>\r\n\r\n                                                            <Col>\r\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                            </Col>\r\n\r\n                                                            <Col md={4}>\r\n                                                                {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                ))}\r\n                                            </ListGroup>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                            </ListGroup>\r\n\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                            <Card>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <h2>Order Summary</h2>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Items:</Col>\r\n                                            <Col>${order.itemsPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Shipping:</Col>\r\n                                            <Col>${order.shippingPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Tax:</Col>\r\n                                            <Col>${order.taxPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Total:</Col>\r\n                                            <Col>${order.totalPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n\r\n                                    {!order.isPaid && (\r\n                                        <ListGroup.Item>\r\n                                            {loadingPay && <Loader />}\r\n\r\n                                            {!sdkReady ? (\r\n                                                <Loader/>\r\n                                            ) : (\r\n                                                    <PayPalButton\r\n                                                        amount={order.totalPrice}\r\n                                                        onSuccess={successPaymentHandler}\r\n                                                    />\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n                                </ListGroup>\r\n                                {}\r\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            type='button'\r\n                                            className='btn btn-block'\r\n                                            onClick={deliverHandler}\r\n                                        >\r\n                                            Mark As Delivered\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            )\r\n}\r\n\r\nexport default OrderScreen\r\n","import { Footer } from \"./components/Footer\";\nimport { Header } from \"./components/Header\";\nimport { Container} from 'react-bootstrap'\nimport HomeScreen from \"./screens/HomeScreen\";\nimport { HashRouter} from \"react-router-dom\";\nimport {Route} from 'react-router-dom'\nimport ProductScreen from \"./screens/ProductScreen\";\nimport CartScreen from \"./screens/CartScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport ShippingScreen from \"./screens/ShippingScreen\";\nimport PaymentScreen from \"./screens/PaymentScreen\";\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\nimport OrderScreen from \"./screens/OrderScreen\";\n\n\n\nfunction App() {\n  return (\n    <HashRouter className=\"App\">\n     <Header/>\n     <main className='py-3'>\n       <Container>\n          <Route path='/' exact component={HomeScreen} />\n          <Route path='/product/:id' exact component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen}/>\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/order/:id' component={OrderScreen} />\n       </Container>\n     </main>\n     <Footer/>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore,applyMiddleware, combineReducers} from 'redux'\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { productListReducer } from './reducers/productListReducer';\r\nimport { productDetailsReducer,productReviewCreateReducer, productTopRatedReducer } from './reducers/productDetails';\r\nimport { cartReducer } from \"./reducers/cartReducers\";\r\nimport { userDetailsReducer, userLoginReducer,userRegisterReducer, userUpdateProfileReducer } from './reducers/userReducer';\r\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer } from './reducers/orderReducers';\r\n\r\n\r\n\r\nconst reducer=combineReducers({\r\n    productList:productListReducer,\r\n    productDetails:productDetailsReducer,\r\n    productReviewCreate : productReviewCreateReducer,\r\n    productTopRated : productTopRatedReducer,\r\n    cart:cartReducer,\r\n    userLogin:userLoginReducer,\r\n    userRegister:userRegisterReducer,\r\n    userDetails:userDetailsReducer,\r\n    userUpdateProfile:userUpdateProfileReducer,\r\n    orderCreate:orderCreateReducer,\r\n    orderDetails:orderDetailsReducer,\r\n    orderPay:orderPayReducer\r\n})\r\n\r\nconst cartitemsfromstorage=localStorage.getItem('cartItems')? JSON.parse(localStorage.getItem('cartItems')):[]\r\n\r\nconst userInfoFromStorage=localStorage.getItem('userInfo')? JSON.parse(localStorage.getItem('userInfo')):null\r\n\r\nconst shippingAddressfromlocalstorage=localStorage.getItem('shippingAddress')? JSON.parse(localStorage.getItem('shippingAddress')):{}\r\n\r\nconst initialState={\r\n    cart:{cartItems:cartitemsfromstorage,\r\n    shippingAddress:shippingAddressfromlocalstorage},\r\n    userLogin:{userInfo:userInfoFromStorage}\r\n}\r\nconst middleware=[thunk]\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import { bindActionCreators } from \"redux\";\r\n\r\n\r\nexport const productListReducer = (state={products:[]},action) => {\r\n    switch (action.type) {\r\n        case 'PRODUCT_LIST_REQUEST':\r\n            return{loading:true,products:[]}\r\n        case 'PRODUCT_LIST_SUCCESS':\r\n            return{loading:false,products:action.payload.products,pages:action.payload.pages}\r\n        case 'PRODUCT_LIST_FAIL':\r\n            return{loading:false,error:action.payload}\r\n            \r\n            \r\n    \r\n        default:\r\n            return state\r\n            \r\n    }\r\n}\r\n\r\n\r\n","import { bindActionCreators } from \"redux\";\r\n\r\n\r\nexport const productDetailsReducer = (state={product:{reviews:[]}},action) => {\r\n    switch (action.type) {\r\n        case 'PRODUCT_DETAILS_REQUEST':\r\n            return{loading:true,...state}\r\n        case 'PRODUCT_DETAILS_SUCCESS':\r\n            return{loading:false,product:action.payload}\r\n        case 'PRODUCT_DETAILS_FAIL':\r\n            return{loading:false,error:action.payload}\r\n            \r\n            \r\n    \r\n        default:\r\n            return state\r\n            \r\n    }\r\n}\r\n\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'PRODUCT_CREATE_REVIEW_REQUEST':\r\n            return { loading: true }\r\n\r\n        case 'PRODUCT_CREATE_REVIEW_SUCCESS':\r\n            return { loading: false, success: true, }\r\n\r\n        case 'PRODUCT_CREATE_REVIEW_FAIL':\r\n            return { loading: false, error: action.payload }\r\n\r\n        case 'PRODUCT_CREATE_REVIEW_RESET':\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case 'PRODUCT_TOP_REQUEST':\r\n            return { loading: true, products: [] }\r\n\r\n        case 'PRODUCT_TOP_SUCCESS':\r\n            return { loading: false, products: action.payload, }\r\n\r\n        case 'PRODUCT_TOP_FAIL':\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\n","export const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    \r\n    \r\n    console.log('from reducer',action.payload)\r\n    switch (action.type) {\r\n        case 'CART_ADD_ITEM':\r\n\r\n            \r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x =>\r\n                        x.product === existItem.product ? item : x)\r\n                }\r\n\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case 'CART_REMOVE_ITEM':\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n        case 'CART_SAVE_SHIPPING_ADDRESS':\r\n                return {\r\n                    ...state,\r\n                    shippingAddress: action.payload\r\n                }\r\n    \r\n        case 'CART_SAVE_PAYMENT_METHOD':\r\n                return {\r\n                    ...state,\r\n                    paymentMethod: action.payload\r\n                }\r\n\r\n        \r\n\r\n        default:\r\n            \r\n            return state\r\n    }\r\n}\r\n\r\n","export const userLoginReducer = (state={},action) => {\r\n    switch (action.type) {\r\n        case 'USER_LOGIN_REQUEST':\r\n            return{loading:true}\r\n        case 'USER_LOGIN_SUCCESS':\r\n            return{loading:false,userInfo:action.payload}\r\n        case 'USER_LOGIN_FAIL':\r\n            return{loading:false,error:action.payload}\r\n\r\n        case 'USER_LOGOUT':\r\n            return{}\r\n            \r\n            \r\n    \r\n        default:\r\n            return state\r\n            \r\n    }\r\n}\r\n\r\n\r\nexport const userRegisterReducer = (state={},action) => {\r\n    switch (action.type) {\r\n        case 'USER_REGISTER_REQUEST':\r\n            return{loading:true}\r\n        case 'USER_REGISTER_SUCCESS':\r\n            return{loading:false,userInfo:action.payload}\r\n        case 'USER_REGISTER_FAIL':\r\n            return{loading:false,error:action.payload}\r\n\r\n        case 'USER_LOGOUT':\r\n            return{}\r\n            \r\n            \r\n    \r\n        default:\r\n            return state\r\n            \r\n    }\r\n}\r\n\r\n\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case 'USER_DETAILS_REQUEST':\r\n            return { ...state, loading: true }\r\n\r\n        case 'USER_DETAILS_SUCCESS':\r\n            return { loading: false, user: action.payload }\r\n\r\n        case 'USER_DETAILS_FAIL':\r\n            return { loading: false, error: action.payload }\r\n\r\n        case 'USER_DETAILS_RESET':\r\n            return { user: {} }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'USER_UPDATE_PROFILE_REQUEST':\r\n            return { loading: true }\r\n\r\n        case 'USER_UPDATE_PROFILE_SUCCESS':\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n\r\n        case 'USER_UPDATE_PROFILE_FAIL':\r\n            return { loading: false, error: action.payload }\r\n\r\n        case 'USER_UPDATE_PROFILE_RESET':\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_CREATE_RESET,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n} from '../../src/orderConstants'\n\n\nexport const orderCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_CREATE_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_CREATE_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                order: action.payload\n            }\n\n        case ORDER_CREATE_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case ORDER_CREATE_RESET:\n            return {}\n\n\n        default:\n            return state\n    }\n}\n\n\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\n    switch (action.type) {\n        case ORDER_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case ORDER_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload\n            }\n\n        case ORDER_DETAILS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n\n        default:\n            return state\n    }\n}\n\n\nexport const orderPayReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_PAY_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_PAY_SUCCESS:\n            return {\n                loading: false,\n                success: true\n            }\n\n        case ORDER_PAY_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case ORDER_PAY_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const orderDeliverReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_DELIVER_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_DELIVER_SUCCESS:\n            return {\n                loading: false,\n                success: true\n            }\n\n        case ORDER_DELIVER_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case ORDER_DELIVER_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case ORDER_LIST_MY_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_LIST_MY_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n            }\n\n        case ORDER_LIST_MY_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case ORDER_LIST_MY_RESET:\n            return {\n                orders: []\n            }\n\n        default:\n            return state\n    }\n}\n\n\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case ORDER_LIST_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_LIST_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n            }\n\n        case ORDER_LIST_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './bootstrap.min.css'\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}